<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.petshopuser.mapper.CommodityMapper">
    <resultMap id="getCommodityByIdDTO" type="com.example.petshopuser.entity.Commodity">
        <result column="id" property="id"/>
        <result column="category_id"   property="category_id"/>
        <result column="createTime"    property="createTime"/>
        <result column="description" property="description"/>
        <result column="name" property="name"/>
        <result column="imgs" property="imgs"/>
        <result column="specifications" property="specifications"/>
    </resultMap>
    <select id="getCommodityById" resultMap="getCommodityByIdDTO">
        select * from commodity where id = #{id};
    </select>
    <resultMap id="getAllByCommodityIdDTO" type="com.example.petshopuser.entity.Specification_price">
        <result column="id" property="id" />
        <result column="commodity_id" property="commodity_id"/>
        <result column="specification_ids" property="specification_ids"/>
        <result column="price" property="price"/>
        <result column="sales_volume" property="sales_volume"/>
        <result column="inventory" property="inventory"/>
        <result column="img" property="img"/>
    </resultMap>
    <select id="getAllByCommodityId" resultMap="getAllByCommodityIdDTO">
        select * from specification_price where commodity_id = #{commodity_id};
    </select>
    <resultMap id="getBySpecificationIdDTO" type="com.example.petshopuser.entity.Specification">
        <result column="id" property="id" />
        <result column="specification_name" property="specification_name"/>
        <result column="commodity_id" property="commodity_id"/>
        <result column="type" property="type"/>
        <result column="create_time" property="create_time"/>
    </resultMap>
    <select id="getBySpecificationId" resultMap="getBySpecificationIdDTO">
        select * from specifications where id = #{id};
    </select>
    <resultMap id="getAllSpecificationDTO" type="com.example.petshopuser.entity.Specification">
        <result column="id" property="id" />
        <result column="specification_name" property="specification_name"/>
        <result column="commodity_id" property="commodity_id"/>
        <result column="type" property="type"/>
        <result column="create_time" property="create_time"/>
    </resultMap>
    <select id="getAllSpecification" resultMap="getAllSpecificationDTO">
        select * from specifications where commodity_id=#{commodity_id}
    </select>

    <resultMap id="commodityIntroDTO" type="com.example.petshopuser.entity.DTO.CommodityIntroDTO">
        <result column="name" property="name" />
        <result column="id" property="id"/>
        <result column="imgs" property="imgs"/>
        <result column="category_id" property="categoryId"/>
        <result column="createtime" property="createtime"/>
        <result column="total_sales" property="total_sales"/>
        <result property="total_sales" column="total_sales"/>
        <result property="price" column="min_price"/>
    </resultMap>

    <select id="getAllCommodityIntro" resultMap="commodityIntroDTO">
        select c.*,SUM(s.sales_volume) as total_sales,MIN(s.price) as min_price
        from commodity c
        INNER JOIN specification_price s ON c.id = s.commodity_id
        GROUP BY c.id
        <choose>
            <when test="ranking == 'P_ASC'">
                ORDER BY min_price ASC
            </when>
            <when test="ranking == 'P_DES'">
                ORDER BY min_price DESC
            </when>
            <when test="ranking == 'S_ASC'">
                ORDER BY total_sales ASC
            </when>
            <when test="ranking == 'S_DES'">
                ORDER BY total_sales DESC
            </when>
            <otherwise>

            </otherwise>
        </choose>
        LIMIT #{offset},#{pageSize}
    </select>
    <select id="getCommodityIntroByKW" resultMap="commodityIntroDTO">
        select c.*,SUM(s.sales_volume) as total_sales,MIN(s.price) as min_price
        from commodity c
        INNER JOIN specification_price s ON c.id = s.commodity_id
        WHERE name LIKE CONCAT('%', #{kw}, '%')
        GROUP BY c.id
        <choose>
            <when test="ranking == 'P_ASC'">
                ORDER BY min_price ASC
            </when>
            <when test="ranking == 'P_DES'">
                ORDER BY min_price DESC
            </when>
            <when test="ranking == 'S_ASC'">
                ORDER BY total_sales ASC
            </when>
            <when test="ranking == 'S_DES'">
                ORDER BY total_sales DESC
            </when>
            <otherwise>

            </otherwise>
        </choose>
        limit #{offset},#{pageSize}
    </select>
    <select id="getCommodityMinPrice" resultType="java.math.BigDecimal">
        SELECT MIN(price) AS min_price FROM specification_price WHERE commodity_id = #{id}
    </select>


    <resultMap id="commodityCategoryDTO" type="com.example.petshopuser.entity.DTO.CommodityCategoryDTO">
        <result column="category_name" property="category_name" />
        <result column="id" property="id"/>
        <result column="createTime" property="createTime"/>
        <result column="level" property="level"/>
        <result column="p_level_id" property="p_level_id"/>
    </resultMap>
    <select id="getCategoryById" resultMap="commodityCategoryDTO">
        select * from commodity_categories where id=#{categoryId}
    </select>
    <select id="getAll2Category" resultMap="commodityCategoryDTO">
        select * from commodity_categories where level = 2
    </select>
    <select id="getAll1Category" resultMap="commodityCategoryDTO">
        select * from commodity_categories where level = 1
    </select>
    <select id="getChildCategoryByPlevel" resultMap="commodityCategoryDTO">
        select * from commodity_categories where p_level_id = #{p_level_id} and level=2
    </select>
    <select id="getCommodityIntroByCategoryId" resultMap="commodityIntroDTO">
        select c.*,SUM(s.sales_volume) as total_sales,MIN(s.price) as min_price
        from commodity c
        INNER JOIN specification_price s ON c.id = s.commodity_id
        where category_id=#{category_id}
        GROUP BY c.id
        order by create_time desc  limit #{offset}, #{pageSize}
    </select>
    <select id="getCommodityIntroByCategoryIdList" resultMap="commodityIntroDTO">
        select c.*,SUM(s.sales_volume) as total_sales,MIN(s.price) as min_price
        from commodity c
        INNER JOIN specification_price s ON c.id = s.commodity_id
        WHERE category_id IN
        <foreach collection="child_category_ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        GROUP BY c.id
        <choose>
            <when test="ranking == 'P_ASC'">
                ORDER BY min_price ASC
            </when>
            <when test="ranking == 'P_DES'">
                ORDER BY min_price DESC
            </when>
            <when test="ranking == 'S_ASC'">
                ORDER BY total_sales ASC
            </when>
            <when test="ranking == 'S_DES'">
                ORDER BY total_sales DESC
            </when>
            <otherwise>

            </otherwise>
        </choose>
        ORDER BY create_time DESC limit #{offset}, #{pageSize}
    </select>
    <select id="getCommodityIntrosByCategoryId_Kw" resultMap="commodityIntroDTO">
        select c.*,SUM(s.sales_volume) as total_sales,MIN(s.price) as min_price
        from commodity c
        INNER JOIN specification_price s ON c.id = s.commodity_id
        WHERE name LIKE CONCAT('%', #{kw}, '%') and category_id IN
        <foreach collection="child_category_ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        GROUP BY c.id
        <choose>
            <when test="ranking == 'P_ASC'">
                ORDER BY min_price ASC
            </when>
            <when test="ranking == 'P_DES'">
                ORDER BY min_price DESC
            </when>
            <when test="ranking == 'S_ASC'">
                ORDER BY total_sales ASC
            </when>
            <when test="ranking == 'S_DES'">
                ORDER BY total_sales DESC
            </when>
            <otherwise>

            </otherwise>
        </choose>
        order by create_time desc
        limit #{offset},#{pageSize}
    </select>
    <resultMap id="getCategoryDTO" type="com.example.petshopuser.entity.Category">
        <result column="category_name" property="category_name" />
        <result column="id" property="id"/>
        <result column="level" property="level"/>
        <result column="p_level_id" property="p_level_id"/>
    </resultMap>
    <select id="getCategoryById2" resultMap="getCategoryDTO">
        select * from commodity_categories where id = #{id}
    </select>
    <insert id="setComments">
        insert into comments(id,replyComments_id,user_id,commodity_id,content,imgs,rating)
        values (#{id},#{replyComments_id},#{user_id},#{commodity_id},#{content},#{imgs},#{rating})
    </insert>

    <resultMap id="findCommentsBycommodity_IdDTO" type="com.example.petshopuser.entity.Comment">
        <result column="id" property="id" />
        <result column="user_id" property="user_id"/>
        <result column="commodity_id" property="commodity_id"/>
        <result column="content" property="content"/>
        <result column="rating" property="rating"/>
    </resultMap>
    <select id="findCommentsByCommodity_Id" resultMap="findCommentsBycommodity_IdDTO">
        select * from comments where commodity_id = #{commodity_id}
    </select>

    <resultMap id="findCommentsByIdDTO" type="com.example.petshopuser.entity.Comment">
        <result column="id" property="id" />
        <result column="user_id" property="user_id"/>
        <result column="commodity_id" property="commodity_id"/>
        <result column="content" property="content"/>
        <result column="rating" property="rating"/>
    </resultMap>
    <select id="findCommentsById" resultMap="findCommentsByIdDTO">
        select * from comments where id = #{id}
    </select>

    <select id="getCommodityIntroById" resultMap="commodityIntroDTO">
        select c.*,sum(sp.sales_volume) as total_sales,MIN(sp.price) as min_price
        from commodity c
        inner join specification_price sp on c.id = sp.commodity_id
        where c.id = #{commodity_id}
        group by c.id
    </select>

    <resultMap id="specification_price" type="com.example.petshopuser.entity.Specification_price">
        <result column="id" property="id"/>
        <result column="commodity_id" property="commodity_id"/>
        <result column="specification_ids" property="specification_ids"/>
        <result column="price" property="price"/>
        <result column="inventory" property="inventory"/>
        <result column="sales_volume" property="sales_volume"/>
        <result column="img" property="img"/>
    </resultMap>
    <select id="getSpecification_priceById"
            resultMap="specification_price">
        select * from specification_price where id = #{specification_id}
    </select>
    <select id="getSpecification_priceByCommodity_id" resultMap="specification_price">
        select * from specification_price where commodity_id = #{commodity_id}
    </select>
</mapper>